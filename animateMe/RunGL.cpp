
//#define glBindVertexArray glBindVertexArrayOES
//#define glGenVertexArrays glGenVertexArraysOES
//#define glDeleteVertexArrays glDeleteVertexArraysOES


//___GLOBALS_ARE_WORKING_IN_----------------->>>   OpenGLRenderer.h


//###############################################################################################################################################

#include "MATRIX_MATH.cpp"

//###############################################################################################################################################


//----------------------------------------------------------------------------------------
#define BUFFER_OFFSET(i) ((char *)0 + (i))
//----------------------------------------------------------------------------------------


//===================================================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//===================================================================================================================================================================

void ConfigureAndLoadTexture(GLubyte *textureData, GLint texWidth, GLint texHeight )
{
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);
	glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_NEAREST); 
	glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR_MIPMAP_NEAREST);	
    
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, texWidth, texHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, textureData);
    
    glGenerateMipmap(GL_TEXTURE_2D);
}

//===================================================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//===================================================================================================================================================================


//------------------------------------------------------------------------------------------------------------------------------------------

#ifdef WIN32
    #include "headerFies/FreeImage.h"
    #include "cpp/freeImage.cpp"

    #include "headerFies/VSync.h"
#endif

//------------------------------------------------------------------------------------------------------------------------------------------

GLuint      textureMap[1000];
GLuint      normalMap[1000];
GLuint      specularMap[1000];
GLuint      shadowMap[3];                       

//------------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                                                             
GLfloat     eyePosition[]    = {0.0, -0.16, 1.0};
GLfloat     look_LEFT_RIGHT  =  0.0;
GLfloat     look_UP_DOWN     =  0.0;

//------------------------------------------------------------------------------------------------------------------------------------------

GLfloat     modelView[16];
GLfloat     projection[16];
GLfloat     mvpMatrix[16];
GLfloat     mvpMatrixInverse[16];
GLfloat     lightMatrix[16];  
GLfloat     moveSetMatrix[16]; 

GLuint      UNIFORM_MODELVIEWPROJ;
GLuint      UNIFORM_MODELVIEWPROJ_INVERSE;
GLuint      UNIFORM_LIGHT_MATRIX;
//--------------------------------------------------
GLuint      UNIFORM_TEXTURE_DOT3;
GLuint      UNIFORM_TEXTURE;

//------------------------------------------------------------------------



                                //===================================================================================================================
                                GLboolean       runAnimation     = false;
                                GLboolean       switchPlayOnOff  = true;
                                //GLfloat       rotation = 0;
                                GLfloat         moveSet[]                                                   = {0.0, 0.0, 0.0}; 
                                GLfloat         goldenSunset_LIGHT_POSITION_01[]                            =  { 	-0.068917,   3.9, -0.715183, 1.0};
                                GLfloat         chestArmor_LIGHT_POSITION_01[]                              =  {  0.5,      -10.0, 30.0,      1.0};
                                GLfloat         marcModel_SCALE                     =  1.0;
                                #include        "_MODEL_FOLDERS_/marcParts/marc_GLOBALS.cpp"
                                #include        "_MODEL_FOLDERS_/chestArmor/chestArmor_Globals.cpp" 
                                //====================================================================================================================    
                                #include        "HUD/controls/smallButton/smallButton_Globals.cpp"
                                #include        "HUD/poseIcons/poseSelection/poseSelection_GLOBALS.cpp"
                                //====================================================================================================================    





#include "ANIMATION/ANIMATION_GLOBALS.cpp"



//===================================================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//===================================================================================================================================================================

void InitGL()
{
        //==================================================================================================================== 
        #include "_MODEL_FOLDERS_/marcParts/marc_INIT.cpp"
        #include "_MODEL_FOLDERS_/chestArmor/chestArmor_INIT.cpp"  
        //==================================================================================================================== 
        #include "HUD/controls/smallButton/smallButton_Init.cpp"
        //==================================================================================================================== 
        #include "HUD/poseIcons/poseSelection/poseSelection_INIT.cpp"
        //==================================================================================================================== 
    
        moveSet_AnimationSequence          = true;
        hips_AnimationSequence             = true;
        torso_AnimationSequence            = true;
        head_AnimationSequence             = true;      
        leftUpperArm_AnimationSequence     = true;         
        rightUpperArm_AnimationSequence    = true;  
        leftUpperLeg_AnimationSequence     = true;      
        rightUpperLeg_AnimationSequence    = true; 
}

//===================================================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//===================================================================================================================================================================

void RenderGL(void)
{
        //###########################################################################################################################################==============     
        //---------------------------------------------------SHADOW_FRAMEBUFFER_CODE_GOES_HERE_____________!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //---------------------------------------------------SHADOW_FRAMEBUFFER_CODE_GOES_HERE_____________!!!!!!!!!!!!!!!!!!!!!!!!!!!!    
    
    
        //---------------------------------------------------SHADOW_FRAMEBUFFER_CODE_GOES_HERE_____________!!!!!!!!!!!!!!!!!!!!!!!!!!!!    
        //---------------------------------------------------SHADOW_FRAMEBUFFER_CODE_GOES_HERE_____________!!!!!!!!!!!!!!!!!!!!!!!!!!!!    
        //###########################################################################################################################################==============     
    
    
    
        //###########################################################################################################################################============== 
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        #ifdef __APPLE__    
        glBindFramebuffer(GL_FRAMEBUFFER, 0); 	
        glBindFramebuffer(GL_FRAMEBUFFER, viewFramebuffer); 
        #endif    
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!        
        //---------------------------------------------------RETURN_TO_MAIN_FRAMEBUFFER____________________!!!!!!!!!!!!!!!!!!!!!!!!!!!!          
        //###########################################################################################################################################============== 
    
        //=========================================================================================================================================================    
        glClearColor( 0.2f, 0.0f, 0.2f, 0.5f );
        glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT); 
        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); 
        //========================================================================================================================================================= 
    
        PerspectiveMatrix(projection, 45,(float)viewWidth / (float)viewHeight, 0.1, 10000);
        Rotate(projection, -90.0, 0.0, 0.0, 1.0);//_____FOR_iOS_LANDSCAPE_VIEW 
        //=========================================================================================================================================================
    
        if(runAnimation == true)
        {
                #include "ANIMATION/ANIMATION_RUN.cpp"
        }
    
        //=========================================================================================================================================================
        #include "_MODEL_FOLDERS_/marcParts/RenderMarc.cpp"
        //=========================================================================================================================================================
        #include "HUD/controls/smallButton/smallButton_Render.cpp"
        //=========================================================================================================================================================   
        #include "HUD/poseIcons/poseSelection/poseSelection_RENDER.cpp"
        //=========================================================================================================================================================   
    

}

//===================================================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//===================================================================================================================================================================

void shutDownGL(void)
{
        if(textureMap[0] != 0)
        {
                glDeleteTextures(1, &textureMap[0]);
                textureMap[0] = 0;
        }
        if(normalMap[0]  != 0)
        {    
                glDeleteTextures(1, &normalMap[0]);
                normalMap[0]  = 0;
        }

}

//===================================================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
//===================================================================================================================================================================

















